<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.trump.vote.mapper.VoteRecordMapper">
    <resultMap id="BaseResultMap" type="org.trump.vote.entity.VoteRecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="twitter_user_id" jdbcType="VARCHAR" property="twitterUserId"/>
        <result column="vote_date" jdbcType="TIMESTAMP" property="voteDate"/>
        <result column="proof_image_url" jdbcType="VARCHAR" property="proofImageUrl"/>
        <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime"/>
        <result column="update_datetime" jdbcType="TIMESTAMP" property="updateDatetime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        ,
        twitter_user_id,
        vote_date,
        proof_image_url,
        create_datetime,
        update_datetime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vote_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from vote_record
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="org.trump.vote.entity.VoteRecord">
        insert into vote_record (id, twitter_user_id, vote_date,
        proof_image_url, create_datetime, update_datetime
        )
        values (#{id,jdbcType=BIGINT}, #{twitterUserId,jdbcType=VARCHAR}, #{voteDate,jdbcType=TIMESTAMP},
        #{proofImageUrl,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}, #{updateDatetime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="org.trump.vote.entity.VoteRecord">
        insert into vote_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="twitterUserId != null">
                twitter_user_id,
            </if>
            <if test="voteDate != null">
                vote_date,
            </if>
            <if test="proofImageUrl != null">
                proof_image_url,
            </if>
            <if test="createDatetime != null">
                create_datetime,
            </if>
            <if test="updateDatetime != null">
                update_datetime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="twitterUserId != null">
                #{twitterUserId,jdbcType=VARCHAR},
            </if>
            <if test="voteDate != null">
                #{voteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="proofImageUrl != null">
                #{proofImageUrl,jdbcType=VARCHAR},
            </if>
            <if test="createDatetime != null">
                #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDatetime != null">
                #{updateDatetime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.trump.vote.entity.VoteRecordExample" resultType="java.lang.Long">
        select count(*)
        from vote_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="org.trump.vote.entity.VoteRecord">
        update vote_record
        <set>
            <if test="twitterUserId != null">
                twitter_user_id = #{twitterUserId,jdbcType=VARCHAR},
            </if>
            <if test="voteDate != null">
                vote_date = #{voteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="proofImageUrl != null">
                proof_image_url = #{proofImageUrl,jdbcType=VARCHAR},
            </if>
            <if test="createDatetime != null">
                create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDatetime != null">
                update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.trump.vote.entity.VoteRecord">
        update vote_record
        set twitter_user_id = #{twitterUserId,jdbcType=VARCHAR},
        vote_date = #{voteDate,jdbcType=TIMESTAMP},
        proof_image_url = #{proofImageUrl,jdbcType=VARCHAR},
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="countByUserId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1)
        from vote_record
        where twitter_user_id = #{userId, jdbcType=VARCHAR}
    </select>

    <select id="getLatestRecord" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from vote_record
        order by vote_date desc
        <choose>
            <when test="count == null">
                limit 10
            </when>
            <otherwise>
                limit #{count, jdbcType=INTEGER}
            </otherwise>
        </choose>
    </select>

    <select id="totalCount" resultType="java.lang.Long">
        select count(1)
        from vote_record
    </select>

    <select id="voteCountsByMonth" resultType="org.trump.vote.entity.VoteCountsByDays">
        SELECT
            DATE (vote_date) AS vote_day, COUNT (*) AS vote_count
        FROM
            vote_record
        WHERE
            vote_date >= DATE_SUB(CURDATE()
            , INTERVAL 30 DAY)
        GROUP BY
            vote_day
        ORDER BY
            vote_day;
    </select>

    <select id="voteCountsBy30Minutes" resultType="org.trump.vote.entity.VoteCountsBy30Minutes">
        SELECT
            DATE (vote_date) AS vote_day, DATE_FORMAT(vote_date, '%Y-%m-%d %H:%i:00') AS vote_half_hour, COUNT (*) AS vote_count
        FROM
            vote_record
        WHERE
            vote_date >= DATE_SUB(NOW()
            , INTERVAL 7 DAY)
        GROUP BY
            vote_day, FLOOR(MINUTE (vote_date) / 30), HOUR (vote_date)
        ORDER BY
            vote_day, vote_half_hour;
    </select>

    <select id="votedUsers" resultType="org.trump.vote.entity.TwitterUser">
        SELECT twitter_user_id,
               vote_date,
               proof_image_url
        FROM vote_record
        ORDER BY vote_date DESC LIMIT 10;
    </select>
</mapper>